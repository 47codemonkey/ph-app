{"ast":null,"code":"var _jsxFileName = \"/home/codemonkey/Desktop/projects/ph-app/src/components/Search/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport { setSearchValue } from '../../redux/filter/slice';\nimport { SearchIcon } from '../../assets/icons/SearchIcon/SearchIcon';\nimport { SearchClearIcon } from '../../assets/icons/SearchClearIcon/SearchClearIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState('');\n  const inputRef = React.useRef(null);\n\n  const onClickClear = () => {\n    var _inputRef$current;\n\n    dispatch(setSearchValue(''));\n    setValue('');\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  const updateSearchValue = React.useCallback(debounce(str => {\n    dispatch(setSearchValue(str));\n  }, 150), []);\n\n  const onChangeInput = event => {\n    setValue(event.target.value);\n    updateSearchValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: value,\n      onChange: onChangeInput,\n      className: \"search-input\",\n      placeholder: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), value && /*#__PURE__*/_jsxDEV(SearchClearIcon, {\n      onClick: onClickClear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"jMN6A2vpGNpBt+3kdA+DpZRrPmc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/codemonkey/Desktop/projects/ph-app/src/components/Search/index.tsx"],"names":["React","useDispatch","debounce","setSearchValue","SearchIcon","SearchClearIcon","Search","dispatch","value","setValue","useState","inputRef","useRef","onClickClear","current","focus","updateSearchValue","useCallback","str","onChangeInput","event","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAGA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,eAAT,QAAgC,oDAAhC;;AAEA,OAAO,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AACpC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAuB,EAAvB,CAA1B;AACA,QAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAA+B,IAA/B,CAAjB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AAAA;;AACzBN,IAAAA,QAAQ,CAACJ,cAAc,CAAC,EAAD,CAAf,CAAR;AACAM,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,yBAAAE,QAAQ,CAACG,OAAT,wEAAkBC,KAAlB;AACD,GAJD;;AAMA,QAAMC,iBAAiB,GAAGhB,KAAK,CAACiB,WAAN,CACxBf,QAAQ,CAAEgB,GAAD,IAAiB;AACxBX,IAAAA,QAAQ,CAACJ,cAAc,CAACe,GAAD,CAAf,CAAR;AACD,GAFO,EAEL,GAFK,CADgB,EAIxB,EAJwB,CAA1B;;AAOA,QAAMC,aAAa,GAAIC,KAAD,IAAgD;AACpEX,IAAAA,QAAQ,CAACW,KAAK,CAACC,MAAN,CAAab,KAAd,CAAR;AACAQ,IAAAA,iBAAiB,CAACI,KAAK,CAACC,MAAN,CAAab,KAAd,CAAjB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAEG,QAAZ;AAAsB,MAAA,KAAK,EAAEH,KAA7B;AAAoC,MAAA,QAAQ,EAAEW,aAA9C;AAA6D,MAAA,SAAS,EAAC,cAAvE;AAAsF,MAAA,WAAW,EAAC;AAAlG;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGX,KAAK,iBAAI,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEK;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9BM;;GAAMP,M;UACML,W;;;KADNK,M","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport debounce from 'lodash.debounce';\n\nimport styles from './Search.module.scss';\nimport { setSearchValue } from '../../redux/filter/slice';\n\nimport { SearchIcon } from '../../assets/icons/SearchIcon/SearchIcon';\nimport { SearchClearIcon } from '../../assets/icons/SearchClearIcon/SearchClearIcon';\n\nexport const Search: React.FC = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState<string>('');\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const onClickClear = () => {\n    dispatch(setSearchValue(''));\n    setValue('');\n    inputRef.current?.focus();\n  };\n\n  const updateSearchValue = React.useCallback(\n    debounce((str: string) => {\n      dispatch(setSearchValue(str));\n    }, 150),\n    [],\n  );\n\n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    updateSearchValue(event.target.value);\n  };\n\n  return (\n    <div className=\"search-wrapper\">\n      <SearchIcon />\n      <input ref={inputRef} value={value} onChange={onChangeInput} className=\"search-input\" placeholder=\"Search\" />\n      {value && <SearchClearIcon onClick={onClickClear} />}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}